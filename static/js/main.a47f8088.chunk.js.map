{"version":3,"sources":["components/MonthsList/list.module.css","components/Layout/layout.module.css","constants.js","components/MonthsList/listStyles.js","components/MonthsList/MonthList.js","components/Layout/Layout.js","servises/api.js","components/App/App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","popover","pointerEvents","paper","padding","spacing","summaryGray","backgroundColor","summaryBlue","summaryGreen","summaryRed","MonthList","users","userCounter","useState","anchorEl","setAnchorEl","currentMonth","setMonth","handlePopoverOpen","currentTarget","id","handlePopoverClose","open","Boolean","classes","months","map","month","index","key","className","aria-owns","undefined","aria-haspopup","onMouseEnter","onMouseLeave","Accordion","clsx","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","styles","usersList","filter","dob","Date","getMonth","usersByMonths","firstName","lastName","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","indexOf","Layout","children","layout","fetchUsers","axios","get","App","setUsers","usersNumberByMonth","setNumber","useEffect","then","res","data","reduce","acc","monthNumber","catch","error","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a47f8088.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"list_usersList__1Qdb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__3uHI-\"};","export default [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n  summaryGray: {\n    backgroundColor: 'rgb(174, 187, 193)',\n  },\n  summaryBlue: {\n    backgroundColor: 'rgb(164, 224, 252)',\n  },\n  summaryGreen: {\n    backgroundColor: 'rgb(164, 252, 189)',\n  },\n  summaryRed: {\n    backgroundColor: 'rgb(252, 164, 164)',\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Popover,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport T from 'prop-types';\nimport clsx from 'clsx';\nimport months from '../../constants';\nimport styles from './list.module.css';\nimport useStyles from './listStyles';\n\nexport default function MonthList({ users, userCounter }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [currentMonth, setMonth] = useState(0);\n\n  const handlePopoverOpen = ({ currentTarget }) => {\n    setAnchorEl(currentTarget);\n    setMonth(currentTarget.id);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  const usersByMonths = month =>\n    users.filter(({ dob }) => new Date(dob).getMonth() === month);\n  const classes = useStyles();\n  return (\n    <>\n      {months.map((month, index) => {\n        return (\n          <div\n            key={month}\n            id={month}\n            className={classes.root}\n            aria-owns={open ? 'mouse-over-popover' : undefined}\n            aria-haspopup=\"true\"\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n          >\n            <Accordion\n              classes={{\n                root: clsx(\n                  userCounter[index] <= 2 && classes.summaryGray,\n                  userCounter[index] >= 3 && classes.summaryBlue,\n                  userCounter[index] >= 7 && classes.summaryGreen,\n                  userCounter[index] >= 11 && classes.summaryRed,\n                ),\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel-${month}-content`}\n                id={`panel-${month}-header`}\n              >\n                <Typography className={classes.heading}>{month}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <ol className={styles.usersList}>\n                  {usersByMonths(index).map(({ id, firstName, lastName }) => (\n                    <li key={id}>{`${firstName} ${lastName}`}</li>\n                  ))}\n                </ol>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        );\n      })}\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography>{`Users born in ${currentMonth}: ${\n          userCounter[months.indexOf(currentMonth)]\n        }`}</Typography>\n      </Popover>\n    </>\n  );\n}\n\nMonthList.propTypes = {\n  users: T.arrayOf(\n    T.shape({\n      id: T.string,\n      firstName: T.string,\n      lastName: T.string,\n      dob: T.Date,\n    }),\n  ).isRequired,\n  userCounter: T.shape({\n    [T.number]: T.number,\n  }).isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './layout.module.css';\n\nconst Layout = ({ children }) => {\n  return <div className={styles.layout}>{children}</div>;\n};\n\nLayout.propTypes = {\n  children: T.node.isRequired,\n};\n\nexport default Layout;\n","import axios from 'axios';\n\nconst fetchUsers = axios.get(\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users',\n);\n\nexport default fetchUsers;\n","import React, { useState, useEffect } from 'react';\nimport MonthList from '../MonthsList';\nimport Layout from '../Layout';\nimport fetchUsers from '../../servises/api';\nimport '../../styles.global.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [usersNumberByMonth, setNumber] = useState({});\n\n  useEffect(() => {\n    setUsers([]);\n    fetchUsers\n      .then(res => {\n        setUsers(res.data);\n        setNumber(\n          res.data.reduce((acc, { dob }) => {\n            const monthNumber = new Date(dob).getMonth();\n            if (!acc[monthNumber]) {\n              acc[monthNumber] = 1;\n              return acc;\n            }\n            acc[monthNumber] += 1;\n            return acc;\n          }, {}),\n        );\n      })\n      .catch(error => new Error(error));\n  }, []);\n\n  return (\n    <Layout>\n      <h1>Users</h1>\n      <MonthList users={users} userCounter={usersNumberByMonth} />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}